/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fit5148.teamd.gui;

import fit5148.teamd.dao.PaymentDAO;
import fit5148.teamd.dao.Util;
import fit5148.teamd.pojo.PaymentPOJO;
import java.util.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Varun
 */
public class PaymentJFrame extends javax.swing.JFrame {

    PaymentDAO pao;

    ArrayList<ArrayList<String>> srcResult, srcResultTab2;
    int currentHotelId = 1;
    DefaultTableModel searchResultModel, searchResultModel2;

    /**
     * Creates new form PaymentJFrame
     */
    public PaymentJFrame() {
        initComponents();
        injectComponents();
        this.currentHotelId = 1;
        try {

            pao = new PaymentDAO();

        } catch (SQLException ex) {
            Util.setErrorMessage(glbErrLabel, "There was a problem accessing Database. Please reopen");
            Logger.getLogger(CustomerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        init();
    }
    
    private void injectComponents() {
        initJFrame(this, true, true);
        
    }
    
    private void initJFrame(JFrame jf, Boolean enable, Boolean visible){
        jf.pack();
        jf.setLocationRelativeTo(null);
        jf.setVisible(visible);
        jf.setEnabled(enable);
    }

    private void returnPreviousFrame(){
        // How to return?
        
    }
    
    private void returnMainFrame(){
        this.removeAll();
        this.dispose();
    }
    
    private void init() {
//        Util.displayToggleComponent(modifyCustSearchResultTable);
//      
//        
//        Util.displayToggleComponent(searchPmtTabSearchResultPanel);
//        Util.displayToggleComponent(searchPmtTabChildPanel1DelButton);
//        Util.displayToggleComponent(searchPmtResultScrollPane1);
//        
        modifyCustSearchResultTable.setEnabled(false);
        searchPmtTabSearchResultPanel.setEnabled(false);
        searchPmtTabChildPanel1DelButton.setEnabled(false);
        searchPmtResultScrollPane1.setEnabled(false);

//        Util.displayToggleComponent(addPmtInfoPanel);
//        Util.displayToggleComponent(addPmtButton);
//        Util.displayToggleComponent(searchPmtResultLabel);
//        Util.displayToggleComponent(searchPmtResultTable);
//         Util.displayToggleComponent(searchPmtAddPmtButton);
//         Util.displayToggleComponent(addPmtMethodTextField);
//         Util.displayToggleComponent(addPmtAmtFormattedTextField);
//         Util.displayToggleComponent(addPmtButton);
        addPmtInfoPanel.setEnabled(false);
        addPmtButton.setEnabled(false);
        // searchPmtResultLabel.setEnabled(false);
        searchPmtResultTable.setEnabled(false);
        searchPmtAddPmtButton.setEnabled(false);
        addPmtMethodTextField.setEnabled(false);
        addPmtAmtFormattedTextField.setEnabled(false);
        addPmtButton.setEnabled(false);
        searchResultModel = ((DefaultTableModel) (modifyCustSearchResultTable.getModel()));
        searchResultModel.setRowCount(0);
        searchResultModel2 = ((DefaultTableModel) (searchPmtResultTable.getModel()));
        searchResultModel2.setRowCount(0);
        modifyCustSearchResultTable.getSelectionModel().addListSelectionListener(new RowSelectionListener());
        searchPmtResultTable.getSelectionModel().addListSelectionListener(new RowSelectionListener2());
    }

    private class RowSelectionListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {

           
            searchPmtTabChildPanel1DelButton.setEnabled(true);

        }

    }

    private class RowSelectionListener2 implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {

           
            if (searchResultModel2.getRowCount() > 0) {
                addPmtMethodTextField.setEnabled(true);
                addPmtAmtFormattedTextField.setEnabled(true);
                addPmtButton.setEnabled(true);
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        custPmtTabbedPane = new javax.swing.JTabbedPane();
        searchModifyPmtTabPanel = new javax.swing.JPanel();
        searchModifyPmtPanel = new javax.swing.JPanel();
        searchPmtTabSearchBtn = new javax.swing.JButton();
        searchPmtTabEmlTextField = new javax.swing.JTextField();
        searchPmtTabSearchByEmlOrUnpaidLabel = new javax.swing.JLabel();
        searchPmtTabSearchResultPanel = new javax.swing.JPanel();
        searchPmtTabModifyCustSearchResultScrollPane = new javax.swing.JScrollPane();
        modifyCustSearchResultTable = new javax.swing.JTable();
        searchPmtTabSelectCustomerLabel = new javax.swing.JLabel();
        searchPmtTabModifyOrSavePmtPanel = new javax.swing.JPanel();
        searchPmtTabChildPanel = new javax.swing.JPanel();
        searchPmtTabChildPanel1Label1 = new javax.swing.JLabel();
        searchPmtTabChildPanel1DelButton = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        searchPmtEmlLabel = new javax.swing.JLabel();
        makePmtTabPanel = new javax.swing.JPanel();
        searchPmtLabel = new javax.swing.JLabel();
        searchPmtTabEmlTextField1 = new javax.swing.JTextField();
        searchPmtTabSearchBtn1 = new javax.swing.JButton();
        searchPmtResultScrollPane1 = new javax.swing.JScrollPane();
        searchPmtResultTable = new javax.swing.JTable();
        addPmtPanel = new javax.swing.JPanel();
        addPmtInfoPanel = new javax.swing.JPanel();
        addPmtMethodTextField = new javax.swing.JTextField();
        addPmtMethodLabel = new javax.swing.JLabel();
        addPmtAmtLabel = new javax.swing.JLabel();
        addPmtButton = new javax.swing.JButton();
        addPmtAmtFormattedTextField = new javax.swing.JFormattedTextField();
        searchPmtResultLabel = new javax.swing.JLabel();
        searchPmtAddPmtButton = new javax.swing.JButton();
        searchPmtByEmlRadioButton = new javax.swing.JRadioButton();
        searchByUnpaidBkRadioButton = new javax.swing.JRadioButton();
        mgtPmtLabel = new javax.swing.JLabel();
        glbErrLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchModifyPmtPanel.setPreferredSize(new java.awt.Dimension(800, 500));

        searchPmtTabSearchBtn.setText("Search");
        searchPmtTabSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtTabSearchBtnActionPerformed(evt);
            }
        });

        searchPmtTabEmlTextField.setToolTipText("Enter email");
        searchPmtTabEmlTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtTabEmlTextFieldActionPerformed(evt);
            }
        });

        searchPmtTabSearchByEmlOrUnpaidLabel.setText("Search Payment by Email ID");

        searchPmtTabSearchResultPanel.setPreferredSize(new java.awt.Dimension(1000, 323));

        modifyCustSearchResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Pmt_Id", "Customer Name", "Email", "Payment Date", "Payment Method", "Payment Amt", "Room no(s)", "Check-In", "Check-Out"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchPmtTabModifyCustSearchResultScrollPane.setViewportView(modifyCustSearchResultTable);

        searchPmtTabSelectCustomerLabel.setText("Click and Select Payment to Cancel");
        searchPmtTabSelectCustomerLabel.setFocusable(false);
        searchPmtTabSelectCustomerLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        searchPmtTabModifyOrSavePmtPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchPmtTabModifyOrSavePmtPanel.setLayout(new java.awt.CardLayout());

        searchPmtTabChildPanel1Label1.setText("Modify Selected Payment");

        searchPmtTabChildPanel1DelButton.setText("Refund Payment");
        searchPmtTabChildPanel1DelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtTabChildPanel1DelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPmtTabChildPanelLayout = new javax.swing.GroupLayout(searchPmtTabChildPanel);
        searchPmtTabChildPanel.setLayout(searchPmtTabChildPanelLayout);
        searchPmtTabChildPanelLayout.setHorizontalGroup(
            searchPmtTabChildPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPmtTabChildPanelLayout.createSequentialGroup()
                .addGap(340, 340, 340)
                .addGroup(searchPmtTabChildPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPmtTabChildPanel1DelButton)
                    .addComponent(searchPmtTabChildPanel1Label1))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        searchPmtTabChildPanelLayout.setVerticalGroup(
            searchPmtTabChildPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPmtTabChildPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(searchPmtTabChildPanel1Label1)
                .addGap(18, 18, 18)
                .addComponent(searchPmtTabChildPanel1DelButton)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        searchPmtTabModifyOrSavePmtPanel.add(searchPmtTabChildPanel, "card2");

        jbCancel.setText("Cancel");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPmtTabSearchResultPanelLayout = new javax.swing.GroupLayout(searchPmtTabSearchResultPanel);
        searchPmtTabSearchResultPanel.setLayout(searchPmtTabSearchResultPanelLayout);
        searchPmtTabSearchResultPanelLayout.setHorizontalGroup(
            searchPmtTabSearchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPmtTabSearchResultPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(searchPmtTabSelectCustomerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(428, 428, 428))
            .addGroup(searchPmtTabSearchResultPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(searchPmtTabSearchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPmtTabModifyCustSearchResultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPmtTabSearchResultPanelLayout.createSequentialGroup()
                        .addComponent(searchPmtTabModifyOrSavePmtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchPmtTabSearchResultPanelLayout.setVerticalGroup(
            searchPmtTabSearchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPmtTabSearchResultPanelLayout.createSequentialGroup()
                .addGroup(searchPmtTabSearchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(searchPmtTabSearchResultPanelLayout.createSequentialGroup()
                        .addComponent(searchPmtTabSelectCustomerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchPmtTabModifyCustSearchResultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(searchPmtTabModifyOrSavePmtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        searchPmtEmlLabel.setText("Email");

        javax.swing.GroupLayout searchModifyPmtPanelLayout = new javax.swing.GroupLayout(searchModifyPmtPanel);
        searchModifyPmtPanel.setLayout(searchModifyPmtPanelLayout);
        searchModifyPmtPanelLayout.setHorizontalGroup(
            searchModifyPmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchModifyPmtPanelLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addGroup(searchModifyPmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPmtTabSearchBtn)
                    .addComponent(searchPmtTabSearchByEmlOrUnpaidLabel)
                    .addGroup(searchModifyPmtPanelLayout.createSequentialGroup()
                        .addComponent(searchPmtEmlLabel)
                        .addGap(164, 164, 164)
                        .addComponent(searchPmtTabEmlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(searchModifyPmtPanelLayout.createSequentialGroup()
                .addComponent(searchPmtTabSearchResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 88, Short.MAX_VALUE))
        );
        searchModifyPmtPanelLayout.setVerticalGroup(
            searchModifyPmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchModifyPmtPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(searchPmtTabSearchByEmlOrUnpaidLabel)
                .addGap(18, 18, 18)
                .addGroup(searchModifyPmtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPmtTabEmlTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPmtEmlLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchPmtTabSearchBtn)
                .addGap(18, 18, 18)
                .addComponent(searchPmtTabSearchResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );

        javax.swing.GroupLayout searchModifyPmtTabPanelLayout = new javax.swing.GroupLayout(searchModifyPmtTabPanel);
        searchModifyPmtTabPanel.setLayout(searchModifyPmtTabPanelLayout);
        searchModifyPmtTabPanelLayout.setHorizontalGroup(
            searchModifyPmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchModifyPmtTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchModifyPmtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1088, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchModifyPmtTabPanelLayout.setVerticalGroup(
            searchModifyPmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchModifyPmtTabPanelLayout.createSequentialGroup()
                .addComponent(searchModifyPmtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        custPmtTabbedPane.addTab("Search and Refund", searchModifyPmtTabPanel);

        searchPmtLabel.setText("Search Unpaid booking by Unpaid status or email");

        searchPmtTabEmlTextField1.setToolTipText("Enter email");
        searchPmtTabEmlTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtTabEmlTextField1ActionPerformed(evt);
            }
        });

        searchPmtTabSearchBtn1.setText("Search");
        searchPmtTabSearchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtTabSearchBtn1ActionPerformed(evt);
            }
        });

        searchPmtResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Booking Id", "Customer Name", "Customer Id", "Check-in", "Check-out", "Amount Due"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchPmtResultScrollPane1.setViewportView(searchPmtResultTable);

        addPmtPanel.setLayout(new java.awt.CardLayout());

        addPmtInfoPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addPmtMethodTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPmtMethodTextFieldActionPerformed(evt);
            }
        });

        addPmtMethodLabel.setText("Payment Method");

        addPmtAmtLabel.setText("Amount");

        addPmtButton.setText("Add");
        addPmtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPmtButtonActionPerformed(evt);
            }
        });

        addPmtAmtFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout addPmtInfoPanelLayout = new javax.swing.GroupLayout(addPmtInfoPanel);
        addPmtInfoPanel.setLayout(addPmtInfoPanelLayout);
        addPmtInfoPanelLayout.setHorizontalGroup(
            addPmtInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPmtInfoPanelLayout.createSequentialGroup()
                .addGroup(addPmtInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPmtInfoPanelLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(addPmtMethodLabel)
                        .addGap(31, 31, 31)
                        .addComponent(addPmtMethodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152)
                        .addComponent(addPmtAmtLabel)
                        .addGap(36, 36, 36)
                        .addComponent(addPmtAmtFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPmtInfoPanelLayout.createSequentialGroup()
                        .addGap(456, 456, 456)
                        .addComponent(addPmtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(282, Short.MAX_VALUE))
        );
        addPmtInfoPanelLayout.setVerticalGroup(
            addPmtInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPmtInfoPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(addPmtInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPmtMethodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPmtMethodLabel)
                    .addComponent(addPmtAmtLabel)
                    .addComponent(addPmtAmtFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addPmtButton)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        addPmtPanel.add(addPmtInfoPanel, "card2");

        searchPmtResultLabel.setText("Select an unpaid booking to make payment");

        searchPmtAddPmtButton.setText("Add Payment");
        searchPmtAddPmtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtAddPmtButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(searchPmtByEmlRadioButton);
        searchPmtByEmlRadioButton.setText("Email");
        searchPmtByEmlRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPmtByEmlRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(searchByUnpaidBkRadioButton);
        searchByUnpaidBkRadioButton.setText("Unpaid Bookings");
        searchByUnpaidBkRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByUnpaidBkRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout makePmtTabPanelLayout = new javax.swing.GroupLayout(makePmtTabPanel);
        makePmtTabPanel.setLayout(makePmtTabPanelLayout);
        makePmtTabPanelLayout.setHorizontalGroup(
            makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makePmtTabPanelLayout.createSequentialGroup()
                .addGap(499, 499, 499)
                .addComponent(searchPmtResultLabel)
                .addContainerGap(379, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makePmtTabPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makePmtTabPanelLayout.createSequentialGroup()
                        .addGroup(makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchPmtAddPmtButton)
                            .addComponent(searchPmtTabSearchBtn1)
                            .addComponent(searchPmtResultScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(searchPmtLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, makePmtTabPanelLayout.createSequentialGroup()
                                    .addGroup(makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(searchPmtByEmlRadioButton)
                                        .addComponent(searchByUnpaidBkRadioButton))
                                    .addGap(84, 84, 84)
                                    .addComponent(searchPmtTabEmlTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(254, 254, 254))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makePmtTabPanelLayout.createSequentialGroup()
                        .addComponent(addPmtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );
        makePmtTabPanelLayout.setVerticalGroup(
            makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makePmtTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPmtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchByUnpaidBkRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(makePmtTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPmtTabEmlTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPmtByEmlRadioButton))
                .addGap(18, 18, 18)
                .addComponent(searchPmtTabSearchBtn1)
                .addGap(5, 5, 5)
                .addComponent(searchPmtResultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchPmtResultScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchPmtAddPmtButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addPmtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        custPmtTabbedPane.addTab("Make Payment", makePmtTabPanel);

        mgtPmtLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mgtPmtLabel.setText("Manage Payments");

        glbErrLabel.setForeground(new java.awt.Color(255, 51, 51));
        glbErrLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(custPmtTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1088, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(mgtPmtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(glbErrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mgtPmtLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(glbErrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(custPmtTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1090, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchPmtTabSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtTabSearchBtnActionPerformed
        // TODO add your handling code here:
        if (Util.validateEml(searchPmtTabEmlTextField.getText())) {
            srcResult = pao.getPaymentByCustEml(searchPmtTabEmlTextField.getText(), currentHotelId);
            if (srcResult != null) {
                if (srcResult.size() > 0) {
                    Util.clearErrorMessage(glbErrLabel);
                    System.out.println("Inside result");
                    modifyCustSearchResultTable.setEnabled(true);
                    modifyCustSearchResultTable.setVisible(true);
                    searchPmtTabSearchResultPanel.setEnabled(true);
                    searchPmtTabSearchResultPanel.setVisible(true);

                    Object[] tableCustData = new Object[9];

                    searchResultModel.setRowCount(0);
                    for (int i = 0; i < srcResult.size(); i++) {
                        for (int j = 0; j < srcResult.get(i).size(); j++) {
                            tableCustData[j] = srcResult.get(i).get(j);
                        }

                    }
                    searchResultModel.addRow(tableCustData);
                } else {
                    searchResultModel.setRowCount(0);
                    System.out.println("Inside no result");
                    modifyCustSearchResultTable.setEnabled(false);
                    searchPmtTabChildPanel1DelButton.setEnabled(false);
                    searchPmtTabSearchResultPanel.setEnabled(false);

                    Util.setErrorMessage(glbErrLabel, "0 result");
                }

            } else {
                searchResultModel.setRowCount(0);
                System.out.println("Inside null result");
                modifyCustSearchResultTable.setEnabled(false);
                searchPmtTabChildPanel1DelButton.setEnabled(false);
                searchPmtTabSearchResultPanel.setEnabled(false);

                Util.setErrorMessage(glbErrLabel, "There was a problem while searching");
            }
        } else {
            Util.setErrorMessage(glbErrLabel, "Please check your email");
        }


    }//GEN-LAST:event_searchPmtTabSearchBtnActionPerformed

    private void searchPmtTabEmlTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtTabEmlTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPmtTabEmlTextFieldActionPerformed

    private void searchPmtTabChildPanel1DelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtTabChildPanel1DelButtonActionPerformed
        // TODO add your handling code here:
        if (pao.deletePayment(Integer.parseInt(modifyCustSearchResultTable.getValueAt(modifyCustSearchResultTable.getSelectedRow(), 0).toString()), Float.parseFloat(modifyCustSearchResultTable.getValueAt(modifyCustSearchResultTable.getSelectedRow(), 5).toString()))) {

            searchResultModel.setRowCount(0);
            Util.setErrorMessage(glbErrLabel, "Delete succesful");
            modifyCustSearchResultTable.setEnabled(false);
            searchPmtTabSearchResultPanel.setEnabled(false);
            searchPmtTabChildPanel1DelButton.setEnabled(false);
            searchPmtResultScrollPane1.setEnabled(false);
        } else {
            Util.setErrorMessage(glbErrLabel, "Delete Unsuccessful. Please search again or contact technical support");
        }

    }//GEN-LAST:event_searchPmtTabChildPanel1DelButtonActionPerformed

    private void searchPmtTabEmlTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtTabEmlTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPmtTabEmlTextField1ActionPerformed

    private void searchPmtTabSearchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtTabSearchBtn1ActionPerformed
        // TODO add your handling code here:
        Util.clearErrorMessage(glbErrLabel);
        searchResultModel2.setRowCount(0);
        if (searchPmtByEmlRadioButton.isSelected()) {
            if (Util.validateEml(searchPmtTabEmlTextField1.getText())) {
                srcResultTab2 = pao.getBookingByCustEml(searchPmtTabEmlTextField1.getText(), currentHotelId);
                if (srcResultTab2 != null) {
                    if (srcResultTab2.size() > 0) {

                        searchPmtResultScrollPane1.setEnabled(true);
                        searchPmtResultScrollPane1.setVisible(true);
                        addPmtMethodTextField.setEnabled(true);

                        searchPmtAddPmtButton.setEnabled(false);
                        addPmtAmtFormattedTextField.setEnabled(true);
                        searchPmtResultTable.setEnabled(true);

                        Object[] tableCustData = new Object[6];

                        for (int i = 0; i < srcResultTab2.size(); i++) {
                            for (int j = 0; j < srcResultTab2.get(i).size(); j++) {
                                tableCustData[j] = srcResultTab2.get(i).get(j);
                            }

                        }
                        searchResultModel2.addRow(tableCustData);
                    } else {
                        Util.setErrorMessage(glbErrLabel, "0 result");
                    }
                } else {
                    Util.setErrorMessage(glbErrLabel, "There was a problem while searching");
                }
            } else {
                Util.setErrorMessage(glbErrLabel, "Please check your email");
            }
        } else if (searchByUnpaidBkRadioButton.isSelected()) {

            ArrayList<ArrayList<String>> rs = new ArrayList<>();
            rs = pao.getBookingByUnpaidStatus(currentHotelId);
            if (rs != null) {
                if (rs.size() > 0) {
                    searchPmtResultScrollPane1.setEnabled(true);
                    searchPmtResultScrollPane1.setVisible(true);
                    addPmtMethodTextField.setEnabled(true);

                    searchPmtAddPmtButton.setEnabled(false);
                    addPmtAmtFormattedTextField.setEnabled(true);
                    searchPmtResultTable.setEnabled(true);

                    Object[] tableCustData = new Object[6];

                    for (int i = 0; i < rs.size(); i++) {
                        for (int j = 0; j < rs.get(i).size(); j++) {
                            tableCustData[j] = rs.get(i).get(j);
                        }

                    }
                    searchResultModel2.addRow(tableCustData);
                } else {
                    Util.setErrorMessage(glbErrLabel, "0 result");
                }
            } else {
                Util.setErrorMessage(glbErrLabel, "There was a problem while searching");
            }

        } else {
            Util.setErrorMessage(glbErrLabel, "Please select a radio button");
        }
    }//GEN-LAST:event_searchPmtTabSearchBtn1ActionPerformed

    private void addPmtMethodTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPmtMethodTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addPmtMethodTextFieldActionPerformed

    private void searchPmtAddPmtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtAddPmtButtonActionPerformed
        // TODO add your handling code here:
        addPmtInfoPanel.setEnabled(true);
        addPmtInfoPanel.setVisible(true);
        addPmtMethodTextField.setEnabled(false);
        addPmtMethodTextField.setVisible(true);
        addPmtAmtFormattedTextField.setEnabled(false);
        addPmtAmtFormattedTextField.setVisible(true);
        addPmtButton.setEnabled(false);
        addPmtButton.setVisible(true);

    }//GEN-LAST:event_searchPmtAddPmtButtonActionPerformed

    private void searchPmtByEmlRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPmtByEmlRadioButtonActionPerformed
        // TODO add your handling code here:
        searchPmtTabEmlTextField1.setEnabled(true);
    }//GEN-LAST:event_searchPmtByEmlRadioButtonActionPerformed

    private void searchByUnpaidBkRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByUnpaidBkRadioButtonActionPerformed
        // TODO add your handling code here:

        searchPmtTabEmlTextField1.setEnabled(false);
    }//GEN-LAST:event_searchByUnpaidBkRadioButtonActionPerformed

    private void addPmtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPmtButtonActionPerformed
        // TODO add your handling code here:

        if (addPmtMethodTextField.getText().compareTo("") != 0 && addPmtAmtFormattedTextField.getText().compareTo("") != 0) {
            if (pao.addPayment(new PaymentPOJO(new Date(), addPmtMethodTextField.getText(), Float.parseFloat(addPmtAmtFormattedTextField.getText()), Integer.valueOf(searchPmtResultTable.getValueAt(searchPmtResultTable.getSelectedRow(), 0).toString())))) {
                Util.setErrorMessage(glbErrLabel, "Payment added successfully");

                addPmtButton.setEnabled(false);
                searchPmtResultTable.setEnabled(false);
                searchPmtAddPmtButton.setEnabled(false);

                addPmtMethodTextField.setText("");
                addPmtMethodTextField.setEnabled(false);
                addPmtAmtFormattedTextField.setText("");
                addPmtAmtFormattedTextField.setEnabled(false);
                addPmtButton.setEnabled(false);
                searchResultModel2.setRowCount(0);

            } else {
                Util.setErrorMessage(glbErrLabel, "Payment added unsuccessfully");
            }

        }
    }//GEN-LAST:event_addPmtButtonActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        // TODO add your handling code here:
        System.out.println("Closing Payment Frame");
        returnMainFrame();
    }//GEN-LAST:event_jbCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField addPmtAmtFormattedTextField;
    private javax.swing.JLabel addPmtAmtLabel;
    private javax.swing.JButton addPmtButton;
    private javax.swing.JPanel addPmtInfoPanel;
    private javax.swing.JLabel addPmtMethodLabel;
    private javax.swing.JTextField addPmtMethodTextField;
    private javax.swing.JPanel addPmtPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTabbedPane custPmtTabbedPane;
    private javax.swing.JLabel glbErrLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbCancel;
    private javax.swing.JPanel makePmtTabPanel;
    private javax.swing.JLabel mgtPmtLabel;
    private javax.swing.JTable modifyCustSearchResultTable;
    private javax.swing.JRadioButton searchByUnpaidBkRadioButton;
    private javax.swing.JPanel searchModifyPmtPanel;
    private javax.swing.JPanel searchModifyPmtTabPanel;
    private javax.swing.JButton searchPmtAddPmtButton;
    private javax.swing.JRadioButton searchPmtByEmlRadioButton;
    private javax.swing.JLabel searchPmtEmlLabel;
    private javax.swing.JLabel searchPmtLabel;
    private javax.swing.JLabel searchPmtResultLabel;
    private javax.swing.JScrollPane searchPmtResultScrollPane1;
    private javax.swing.JTable searchPmtResultTable;
    private javax.swing.JPanel searchPmtTabChildPanel;
    private javax.swing.JButton searchPmtTabChildPanel1DelButton;
    private javax.swing.JLabel searchPmtTabChildPanel1Label1;
    private javax.swing.JTextField searchPmtTabEmlTextField;
    private javax.swing.JTextField searchPmtTabEmlTextField1;
    private javax.swing.JScrollPane searchPmtTabModifyCustSearchResultScrollPane;
    private javax.swing.JPanel searchPmtTabModifyOrSavePmtPanel;
    private javax.swing.JButton searchPmtTabSearchBtn;
    private javax.swing.JButton searchPmtTabSearchBtn1;
    private javax.swing.JLabel searchPmtTabSearchByEmlOrUnpaidLabel;
    private javax.swing.JPanel searchPmtTabSearchResultPanel;
    private javax.swing.JLabel searchPmtTabSelectCustomerLabel;
    // End of variables declaration//GEN-END:variables

}
